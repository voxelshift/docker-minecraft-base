name: Build Fabric Images
on:
  schedule:
    - cron: "0,30 * * * *"
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distribution: [debian, alpine]
        version: ["1.20.1"]
    steps:
      - uses: actions/checkout@v3

      - id: fetch-builds
        name: Fetch Fabric ${{ matrix.version }} Builds
        uses: ./.github/actions/get-project-builds
        with:
          project: fabric
          version: ${{ matrix.version }}

      # This is a simple hack to check if we've already published an image for the given build to prevent us from
      # publishing the same build every 30 mins.
      - id: cache-build-id
        name: Check Cache for Build ID
        uses: ./.github/actions/cache-key
        with:
          key: fabric-${{ matrix.version }}-${{ steps.fetch-builds.outputs.build }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        if: steps.cache-build-id.outputs.cache-hit != 'true' || github.event_name != 'schedule'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        if: steps.cache-build-id.outputs.cache-hit != 'true' || github.event_name != 'schedule'

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        if: steps.cache-build-id.outputs.cache-hit != 'true' || github.event_name != 'schedule'
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        if: steps.cache-build-id.outputs.cache-hit != 'true' || github.event_name != 'schedule'
        env:
          dockerfile: ./fabric/Dockerfile${{ matrix.distribution != 'debian' && format('.{0}', matrix.distribution) || '' }}
          tag-suffix: ${{ matrix.distribution != 'debian' && format('-{0}', matrix.distribution) || '' }}
          # Eclipse Termurin doesn't provide images for arm64 alpine: https://github.com/adoptium/containers/issues/158
          platforms: linux/amd64${{ matrix.distribution == 'debian' && ',linux/arm64' || '' }}
        with:
          context: ./fabric/
          file: ${{ env.dockerfile }}
          platforms: ${{ env.platforms }}
          push: true
          build-args: |
            FABRIC_DOWNLOAD_URL=${{ steps.fetch-builds.outputs.download-url }}
          tags: |
            ghcr.io/voxelshift/fabric:${{ matrix.version }}${{ env.tag-suffix }}
            ghcr.io/voxelshift/fabric:${{ matrix.version }}-${{ steps.fetch-builds.outputs.build }}${{ env.tag-suffix }}
